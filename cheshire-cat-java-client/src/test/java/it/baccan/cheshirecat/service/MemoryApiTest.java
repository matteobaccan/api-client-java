/*
 * ðŸ˜¸ Cheshire-Cat API
 * Production ready AI assistant framework
 *
 * The version of the OpenAPI document: 1.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.baccan.cheshirecat.service;

import it.baccan.cheshirecat.ApiException;
import it.baccan.cheshirecat.model.HTTPValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MemoryApi
 */
@Disabled
public class MemoryApiTest {

    private final MemoryApi api = new MemoryApi();

    /**
     * Get Collections
     *
     * Get list of available collections
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionsTest() throws ApiException {
        Object response = api.getCollections();
        // TODO: test validations
    }

    /**
     * Get Conversation History
     *
     * Get the specified user&#39;s conversation history from working memory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConversationHistoryTest() throws ApiException {
        Object response = api.getConversationHistory();
        // TODO: test validations
    }

    /**
     * Recall Memories From Text
     *
     * Search k memories similar to given text.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recallMemoriesFromTextTest() throws ApiException {
        String text = null;
        Integer k = null;
        Object response = api.recallMemoriesFromText(text, k);
        // TODO: test validations
    }

    /**
     * Wipe Collections
     *
     * Delete and create all collections
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wipeCollectionsTest() throws ApiException {
        Object response = api.wipeCollections();
        // TODO: test validations
    }

    /**
     * Wipe Conversation History
     *
     * Delete the specified user&#39;s conversation history from working memory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wipeConversationHistoryTest() throws ApiException {
        Object response = api.wipeConversationHistory();
        // TODO: test validations
    }

    /**
     * Wipe Memory Point
     *
     * Delete a specific point in memory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wipeMemoryPointTest() throws ApiException {
        String collectionId = null;
        String memoryId = null;
        Object response = api.wipeMemoryPoint(collectionId, memoryId);
        // TODO: test validations
    }

    /**
     * Wipe Memory Points By Metadata
     *
     * Delete points in memory by filter
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wipeMemoryPointsByMetadataTest() throws ApiException {
        String collectionId = null;
        Object body = null;
        Object response = api.wipeMemoryPointsByMetadata(collectionId, body);
        // TODO: test validations
    }

    /**
     * Wipe Single Collection
     *
     * Delete and recreate a collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wipeSingleCollectionTest() throws ApiException {
        String collectionId = null;
        Object response = api.wipeSingleCollection(collectionId);
        // TODO: test validations
    }

}
